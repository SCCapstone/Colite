{"remainingRequest":"C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\src\\views\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\src\\views\\Map.vue","mtime":1606230229687},{"path":"C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuY29weS13aXRoaW4iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5ldmVyeSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbGwiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maWx0ZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lmxhc3QtaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZWR1Y2UtcmlnaHQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5yZXZlcnNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb21lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc29ydCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnN1YmFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tbG9jYWxlLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnRvLXN0cmluZyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkM6L1VzZXJzL2hwL0RvY3VtZW50cy9WdWVKUy9Db2xpdGUtbWFzdGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL2hwL0RvY3VtZW50cy9WdWVKUy9Db2xpdGUtbWFzdGVyL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IFhMU1ggZnJvbSAneGxzeCc7CmltcG9ydCB0cmFuc2Zvcm1TaGVldHMgZnJvbSAnLi9yZWFkWGx4LmpzJzsKaW1wb3J0IHsgbG9jYXRpb25zIH0gZnJvbSAnLi9kYXRhLmpzJzsKdmFyIGRhdGFPYmogPSB7CiAgbGF0OiA2LjQ2NTQyMiwKICBsbmc6IDMuNDA2NDQ4Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiR29vZ2xlTWFwIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgY29uc29sZS5sb2coJ2RhdGEnKTsKICAgIHJldHVybiB7CiAgICAgIGNvbnRlbnQ6ICcnLAogICAgICBlcnI6ICdsT2poc2gnLAogICAgICBjZW50ZXI6IHsKICAgICAgICBsYXQ6IGRhdGFPYmoubGF0LAogICAgICAgIGxuZzogZGF0YU9iai5sbmcKICAgICAgfSwKICAgICAgbWFwOiBudWxsLAogICAgICBpbmZvQ29udGVudDogJycsCiAgICAgIGluZm9XaW5kb3dQb3M6IHsKICAgICAgICBsYXQ6IDAsCiAgICAgICAgbG5nOiAwCiAgICAgIH0sCiAgICAgIGluZm9XaW5PcGVuOiBmYWxzZSwKICAgICAgY3VycmVudE1pZHg6IG51bGwsCiAgICAgIC8vb3B0aW9uYWw6IG9mZnNldCBpbmZvd2luZG93IHNvIGl0IHZpc3VhbGx5IHNpdHMgbmljZWx5IG9uIHRvcCBvZiBvdXIgbWFya2VyCiAgICAgIGluZm9PcHRpb25zOiB7CiAgICAgICAgcGl4ZWxPZmZzZXQ6IHsKICAgICAgICAgIHdpZHRoOiAwLAogICAgICAgICAgaGVpZ2h0OiAtMzUKICAgICAgICB9CiAgICAgIH0sCiAgICAgIG1hcmtlcnM6ICcnCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgY29uc29sZS5sb2codGhpcy5tYXJrZXJzKTsKICAgIHRoaXMuJHJlZnMuZ21hcC4kbWFwUHJvbWlzZS50aGVuKGZ1bmN0aW9uIChtYXApIHsKICAgICAgdmFyIGJvdW5kcyA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmdCb3VuZHMoKTsKCiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihfdGhpcy5tYXJrZXJzKSwKICAgICAgICAgIF9zdGVwOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgICAgdmFyIG0gPSBfc3RlcC52YWx1ZTsKICAgICAgICAgIGNvbnNvbGUubG9nKG0pOwogICAgICAgICAgYm91bmRzLmV4dGVuZChtLnBvc2l0aW9uKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgbWFwLmZpdEJvdW5kcyhib3VuZHMpOwogICAgfSk7CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgdmFyIHVybCA9ICIuL3Rlc3RtYXAueGxzeCI7IC8vIEZpbGVzIHBsYWNlZCBpbiB0aGUgcHVibGljIGRpcmVjdG9yeSBjYW4gYmUgYWNjZXNzZWQgZGlyZWN0bHkKCiAgICBheGlvcy5nZXQodXJsLCB7CiAgICAgIHJlc3BvbnNlVHlwZTogJ2FycmF5YnVmZmVyJwogICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHZhciBkYXRhID0gbmV3IFVpbnQ4QXJyYXkocmVzLmRhdGEpOwogICAgICB2YXIgd2IgPSBYTFNYLnJlYWQoZGF0YSwgewogICAgICAgIHR5cGU6ICJhcnJheSIKICAgICAgfSk7CiAgICAgIHZhciBzaGVldHMgPSB3Yi5TaGVldE5hbWVzWzBdOwogICAgICB2YXIgd29ya3NoZWV0ID0gd2IuU2hlZXRzW3NoZWV0c107CiAgICAgIF90aGlzMi5tYXJrZXJzID0gWExTWC51dGlscy5zaGVldF90b19qc29uKHdvcmtzaGVldCkubWFwKGZ1bmN0aW9uICh0cmFuc2Zvcm0pIHsKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0cmFuc2Zvcm0pLCB7fSwgewogICAgICAgICAgcG9zaXRpb246IHsKICAgICAgICAgICAgbGF0OiB0cmFuc2Zvcm0uTGF0aXR1ZGUsCiAgICAgICAgICAgIGxuZzogdHJhbnNmb3JtLkxvbmdpdHVkZQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coX3RoaXMyLm1hcmtlcnMpOwoKICAgICAgX3RoaXMyLiRyZWZzLmdtYXAuJG1hcFByb21pc2UudGhlbihmdW5jdGlvbiAobWFwKSB7CiAgICAgICAgdmFyIGJvdW5kcyA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmdCb3VuZHMoKTsKCiAgICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihfdGhpczIubWFya2VycyksCiAgICAgICAgICAgIF9zdGVwMjsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBtID0gX3N0ZXAyLnZhbHVlOwogICAgICAgICAgICBjb25zb2xlLmxvZyhtKTsKICAgICAgICAgICAgYm91bmRzLmV4dGVuZChtLnBvc2l0aW9uKTsKICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgICB9CgogICAgICAgIG1hcC5maXRCb3VuZHMoYm91bmRzKTsKICAgICAgfSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgIF90aGlzMi5lcnIgPSBlcnI7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZUluZm9XaW5kb3c6IGZ1bmN0aW9uIHRvZ2dsZUluZm9XaW5kb3cobWFya2VyLCBpZHgpIHsKICAgICAgdGhpcy5pbmZvV2luZG93UG9zID0gbWFya2VyLnBvc2l0aW9uOwogICAgICB0aGlzLmluZm9Db250ZW50ID0gdGhpcy5nZXRJbmZvV2luZG93Q29udGVudChtYXJrZXIpOyAvL2NoZWNrIGlmIGl0cyB0aGUgc2FtZSBtYXJrZXIgdGhhdCB3YXMgc2VsZWN0ZWQgaWYgeWVzIHRvZ2dsZQoKICAgICAgaWYgKHRoaXMuY3VycmVudE1pZHggPT0gaWR4KSB7CiAgICAgICAgdGhpcy5pbmZvV2luT3BlbiA9ICF0aGlzLmluZm9XaW5PcGVuOwogICAgICB9IC8vaWYgZGlmZmVyZW50IG1hcmtlciBzZXQgaW5mb3dpbmRvdyB0byBvcGVuIGFuZCByZXNldCBjdXJyZW50IG1hcmtlciBpbmRleAogICAgICBlbHNlIHsKICAgICAgICAgIHRoaXMuaW5mb1dpbk9wZW4gPSB0cnVlOwogICAgICAgICAgdGhpcy5jdXJyZW50TWlkeCA9IGlkeDsKICAgICAgICB9CiAgICB9LAogICAgZ2V0SW5mb1dpbmRvd0NvbnRlbnQ6IGZ1bmN0aW9uIGdldEluZm9XaW5kb3dDb250ZW50KG1hcmtlcikgewogICAgICByZXR1cm4gIjxkaXYgY2xhc3M9XCJjYXJkXCI+XG4gIFxuICA8ZGl2IGNsYXNzPVwiY2FyZC1jb250ZW50XCI+XG4gICAgXG4gICAgPGRpdiBjbGFzcz1cImNvbnRlbnQgcHQtM1wiPlxuICAgICAgPHA+TGF0aXR1ZGUgOiAiLmNvbmNhdChtYXJrZXIucG9zaXRpb24ubGF0LCAiIDxwIC8+XG4gICAgIDxwPkxvbmdpdHVkZTogIikuY29uY2F0KG1hcmtlci5wb3NpdGlvbi5sbmcsICIgPC9wPlxuICAgICAgPHAgY2xhc3M9XCJcIj5SbXAgOiAiKS5jb25jYXQobWFya2VyLlJQTSwgIjwvcD5cbiAgICAgIDxwIGNsYXNzPVwiXCI+RGF0ZSA6ICIpLmNvbmNhdChtYXJrZXIuRGF0ZSwgIjwvcD5cblxuXG4gICAgIFxuICAgICAgXG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+Iik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"map\">\n    <h1>Welcome to the map of all active parts page!</h1>\n  \n    <div>\n    <gmap-map\n      ref=\"gmap\"\n      :center=\"{ lat: 36.778259, lng: -119.417931\n }\"\n      :zoom=\"10\"\n      style=\"width:100%;  height: 100vh;\"\n    >\n      \n      <gmap-marker\n        :key=\"index\"\n        v-for=\"(m, index) in markers\"\n        :position=\"m.position\"\n        @click=\"toggleInfoWindow(m,index)\">\n      </gmap-marker>\n\n      <gmap-info-window\n        :options=\"infoOptions\"\n        :position=\"infoWindowPos\"\n        :opened=\"infoWinOpen\"\n        @closeclick=\"infoWinOpen=false\"\n      >\n        <div v-html=\"infoContent\"></div>\n      </gmap-info-window>\n\n    </gmap-map>\n  </div>\n    \n    \n\n    \n  </div>\n  \n\n\n  \n</template>\n\n<script>\nimport axios from 'axios'\nimport XLSX from 'xlsx'\nimport transformSheets from './readXlx.js'\nimport {locations} from './data.js'\n\n\n\n\n \n\n  const dataObj = {\n    lat: 6.465422,\n    lng: 3.406448\n  };\n  export default {\n    name: \"GoogleMap\",\n    data() {\n      console.log('data')\n    \n      return {\n        content:'',\n        err: 'lOjhsh',\n        center: {lat: dataObj.lat, lng: dataObj.lng},\n        map: null,\n        infoContent: '',\n        infoWindowPos: {\n          lat: 0,\n          lng: 0\n        },\n        infoWinOpen: false,\n        currentMidx: null,\n        //optional: offset infowindow so it visually sits nicely on top of our marker\n        infoOptions: {\n          pixelOffset: {\n            width: 0,\n            height: -35\n          }\n        },\n        markers: ''\n      };\n    },\n    mounted() {\n     console.log(this.markers)\n     \n     this.$refs.gmap.$mapPromise.then((map) => {\n        const bounds = new google.maps.LatLngBounds()\n        for (let m of this.markers) {\n          console.log(m)\n          bounds.extend(m.position)\n        }\n        map.fitBounds(bounds);\n      });\n   \n\n    \n     \n\n    },\n\n\n\n  created() {\n    var url = \"./testmap.xlsx\" // Files placed in the public directory can be accessed directly\n\n       axios.get(url, {responseType:'arraybuffer'})\n    .then((res) => {\n    var data = new Uint8Array(res.data)\n    var wb = XLSX.read(data, {type:\"array\"})\n    var sheets = wb.SheetNames[0];\n     let worksheet = wb.Sheets[sheets];\n    this.markers = XLSX.utils.sheet_to_json(worksheet).map((transform) => {\n    return {\n      ...transform, position: {\n        lat: transform.Latitude,\n        lng: transform.Longitude\n      }\n    }\n      \n    })\n    console.log(this.markers)\n     this.$refs.gmap.$mapPromise.then((map) => {\n        const bounds = new google.maps.LatLngBounds()\n        for (let m of this.markers) {\n          console.log(m)\n          bounds.extend(m.position)\n        }\n        map.fitBounds(bounds);\n      });\n    }).catch( err =>{\n      this.err = err\n    })\n    \n   \n  },\n\n    \n\n\n   \n    methods: {\n      toggleInfoWindow: function (marker, idx) {\n        \n        this.infoWindowPos = marker.position\n        this.infoContent = this.getInfoWindowContent(marker);\n        \n\n        //check if its the same marker that was selected if yes toggle\n        if (this.currentMidx == idx) {\n          this.infoWinOpen = !this.infoWinOpen;\n        }\n        //if different marker set infowindow to open and reset current marker index\n        else {\n          this.infoWinOpen = true;\n          this.currentMidx = idx;\n        }\n      },\n\n      \n\n     \n      getInfoWindowContent: function (marker) {\n        return (`<div class=\"card\">\n  \n  <div class=\"card-content\">\n    \n    <div class=\"content pt-3\">\n      <p>Latitude : ${marker.position.lat} <p />\n     <p>Longitude: ${marker.position.lng} </p>\n      <p class=\"\">Rmp : ${marker.RPM}</p>\n      <p class=\"\">Date : ${marker.Date}</p>\n\n\n     \n      \n    </div>\n  </div>\n</div>`);\n      },\n    }\n  };\n\n\n</script>\n\n\n\n<style>\n\n.map {\n  background-color: #2c3e50;\n  /* min-height: 100%; */\n  /* height: 100%; */\n  height: 100vh;\n}\n</style>\n"],"sourceRoot":"src/views"}]}