{"remainingRequest":"C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\src\\views\\readXlx.js","dependencies":[{"path":"C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\src\\views\\readXlx.js","mtime":1606207519422},{"path":"C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\VueJS\\Colite-master\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9Vc2Vycy9ocC9Eb2N1bWVudHMvVnVlSlMvQ29saXRlLW1hc3Rlci9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwoKdmFyIFhMU1ggPSByZXF1aXJlKCd4bHN4Jyk7IC8vIENvbnZlcnQgcm93cyBhbmQgY29sdW1ucwoKCmZ1bmN0aW9uIHRyYW5zZm9ybVNoZWV0cyhzaGVldHMpIHsKICB2YXIgY29udGVudCA9IFtdOwogIHZhciBjb250ZW50MSA9IFtdOwogIHZhciB0bXBsaXN0ID0gW107CgogIGZvciAodmFyIGtleSBpbiBzaGVldHMpIHsKICAgIC8vIFJlYWRhYmxlIHdvcmtib29rIGRhdGEgaXMgaGFyZCB0byByZWFkIGFuZCBjYW4gYmUgY29udmVydGVkIHRvIEpTT04gZm9ybWF0LiBSZWZlciB0byBodHRwczovL2dpdGh1Yi5jb20vU2hlZXRKUy9qcy14bHN4I3V0aWxpdHktZnVuY3Rpb25zLgogICAgdG1wbGlzdC5wdXNoKFhMU1gudXRpbHMuc2hlZXRfdG9fanNvbihzaGVldHNba2V5XSkubGVuZ3RoKTsKICAgIGNvbnRlbnQxLnB1c2goWExTWC51dGlscy5zaGVldF90b19qc29uKHNoZWV0c1trZXldKSk7CiAgfQoKICB2YXIgbWF4TGVuZ3RoID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgdG1wbGlzdCk7IC8vIFJvdy1jb2x1bW4gY29udmVyc2lvbgoKICBmb3IgKHZhciB5IGluIF90b0NvbnN1bWFibGVBcnJheShBcnJheShtYXhMZW5ndGgpKSkgewogICAgY29udGVudC5wdXNoKFtdKTsKCiAgICBmb3IgKHZhciB4IGluIF90b0NvbnN1bWFibGVBcnJheShBcnJheSh0bXBsaXN0Lmxlbmd0aCkpKSB7CiAgICAgIHRyeSB7CiAgICAgICAgZm9yICh2YXIgeiBpbiBjb250ZW50MVt4XVt5XSkgewogICAgICAgICAgY29udGVudFt5XS5wdXNoKGNvbnRlbnQxW3hdW3ldW3pdKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29udGVudFt5XS5wdXNoKCcgJyk7CiAgICAgIH0KICAgIH0KICB9CgogIGNvbnRlbnQudW5zaGlmdChbXSk7CgogIGZvciAodmFyIF9rZXkgaW4gc2hlZXRzKSB7CiAgICBjb250ZW50WzBdLnB1c2goX2tleSk7CiAgfQoKICByZXR1cm4gY29udGVudDsKfQoKZXhwb3J0IHsgdHJhbnNmb3JtU2hlZXRzIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["C:/Users/hp/Documents/VueJS/Colite-master/frontend/src/views/readXlx.js"],"names":["XLSX","require","transformSheets","sheets","content","content1","tmplist","key","push","utils","sheet_to_json","length","maxLength","Math","max","apply","y","Array","x","z","error","unshift","default"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB,C,CAEA;;;AACA,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC/B,MAAIC,OAAO,GAAI,EAAf;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,GAAT,IAAgBJ,MAAhB,EAAuB;AACrB;AACAG,IAAAA,OAAO,CAACE,IAAR,CAAaR,IAAI,CAACS,KAAL,CAAWC,aAAX,CAAyBP,MAAM,CAACI,GAAD,CAA/B,EAAsCI,MAAnD;AACAN,IAAAA,QAAQ,CAACG,IAAT,CAAcR,IAAI,CAACS,KAAL,CAAWC,aAAX,CAAyBP,MAAM,CAACI,GAAD,CAA/B,CAAd;AACD;;AACD,MAAIK,SAAS,GAAGC,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeF,IAAf,EAAqBP,OAArB,CAAhB,CAT+B,CAU/B;;AACA,OAAK,IAAIU,CAAT,uBAAkBC,KAAK,CAACL,SAAD,CAAvB,GAAoC;AAClCR,IAAAA,OAAO,CAACI,IAAR,CAAa,EAAb;;AACA,SAAK,IAAIU,CAAT,uBAAkBD,KAAK,CAACX,OAAO,CAACK,MAAT,CAAvB,GAA0C;AACxC,UAAI;AACF,aAAK,IAAIQ,CAAT,IAAcd,QAAQ,CAACa,CAAD,CAAR,CAAYF,CAAZ,CAAd,EAA6B;AAC3BZ,UAAAA,OAAO,CAACY,CAAD,CAAP,CAAWR,IAAX,CAAgBH,QAAQ,CAACa,CAAD,CAAR,CAAYF,CAAZ,EAAeG,CAAf,CAAhB;AACD;AACF,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdhB,QAAAA,OAAO,CAACY,CAAD,CAAP,CAAWR,IAAX,CAAgB,GAAhB;AACD;AACF;AACF;;AACDJ,EAAAA,OAAO,CAACiB,OAAR,CAAgB,EAAhB;;AACA,OAAK,IAAId,IAAT,IAAgBJ,MAAhB,EAAuB;AACrBC,IAAAA,OAAO,CAAC,CAAD,CAAP,CAAWI,IAAX,CAAgBD,IAAhB;AACD;;AACD,SAAOH,OAAP;AAED;;AAED,SAAQF,eAAe,IAAIoB,OAA3B","sourcesContent":["const XLSX = require('xlsx')\r\n\r\n// Convert rows and columns\r\nfunction transformSheets(sheets) {\r\n  var content  = []\r\n  var content1 = []\r\n  var tmplist = []\r\n  for (let key in sheets){\r\n    // Readable workbook data is hard to read and can be converted to JSON format. Refer to https://github.com/SheetJS/js-xlsx#utility-functions.\r\n    tmplist.push(XLSX.utils.sheet_to_json(sheets[key]).length)\r\n    content1.push(XLSX.utils.sheet_to_json(sheets[key]))\r\n  }\r\n  var maxLength = Math.max.apply(Math, tmplist)\r\n  // Row-column conversion\r\n  for (let y in [...Array(maxLength)]){\r\n    content.push([])\r\n    for (let x in [...Array(tmplist.length)]) {\r\n      try {\r\n        for (let z in content1[x][y]){\r\n          content[y].push(content1[x][y][z])\r\n        }\r\n      } catch (error) {\r\n        content[y].push(' ')\r\n      }\r\n    }\r\n  }\r\n  content.unshift([])\r\n  for (let key in sheets){\r\n    content[0].push(key)\r\n  }\r\n  return content\r\n\r\n}\r\n\r\nexport {transformSheets as default}"]}]}